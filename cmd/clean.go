package cmd

import (
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"

	"github.com/vinchauhan/goiib/util"

	log "github.com/sirupsen/logrus"
	"github.com/spf13/cobra"
	yaml "gopkg.in/yaml.v2"
)

var config = util.AutoGenerated{}

var cleanCmd = &cobra.Command{
	Use:   "clean",
	Short: "Clean the target directory just like mvn clean",
	Run: func(cmd *cobra.Command, args []string) {

		tracePath := config.Project.Profiles.Profile.Properties.Workspace + config.Project.ArtifactID + "\\" + "target\\"
		err := CleanProject(tracePath)
		if err != nil {
			fmt.Printf("Clean command SUCCESS..!")
		}
		fmt.Sprintf("go-iib build failed with error %s", err)
	},
}

func init() {

	//Initialize Logger

	Formatter := new(log.TextFormatter)
	Formatter.TimestampFormat = "02-01-2006 15:04:05"
	Formatter.FullTimestamp = true
	log.SetFormatter(Formatter)

	RootCmd.AddCommand(cleanCmd)

	path := filepath.Join(filepath.Dir("."), "build.yaml")
	//fmt.Println(path)

	source, err := ioutil.ReadFile(path)
	if err != nil {
		panic(err)
	}
	err = yaml.Unmarshal(source, &config)
	if err != nil {
		panic(err)
	}

}

func CleanProject(targetPath string) error {
	err := os.RemoveAll(targetPath)
	if err != nil {
		return err
	}
	log.WithFields(log.Fields{
		"path": targetPath,
	}).Info("CLEAN COMMAND SUCEEDED..!")
	// log.Info("CLEAN COMMAND SUCEEDED..!")
	// fmt.Println(targetPath)
	return nil
}
